/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings =
                <&kp>,
                <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <400>;
        };
        tog_mod: tog_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "TOG_MOD";
            bindings =
                <&kp>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
       &lt 2 TAB    &kp Q    &kp W             &kp E                &kp R                 &lt 2 T                    &lt 2 Y                    &kp U              &kp I    &kp O            &kp P        &lt 2 ESC
     &lt 1 EQUAL  &lt 4 A  &lt 3 S      &mt LSHIFT D                &kp F                 &lt 1 G                    &lt 1 H                    &kp J  &mt RIGHT_SHIFT K  &lt 3 L  &lt 4 SEMICOLON        &lt 1 SQT
&mt LSHIFT MINUS    &kp Z    &kp X             &kp C                &kp V            &mt LSHIFT B               &mt RSHIFT N                    &kp M          &kp COMMA  &kp DOT         &kp FSLH  &mt RSHIFT PIPE
                                    &tog_mod LCTRL 1  &mt LEFT_ALT DELETE  &mt LEFT_COMMAND SPACE    &mt RIGHT_COMMAND ENTER  &mt RIGHT_ALT BACKSPACE   &tog_mod RCTRL 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5             &kp F6          &kp F7    &kp F8  &kp F9    &kp F10        &kp F11          &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4        &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp PAGE_DOWN      &kp PAGE_UP
 &kp LSHFT  &kp NUMBER_1        &kp N2        &kp N3        &kp N4             &kp N5          &kp N6    &kp N7  &kp N8     &kp N9         &kp N0  &kp RIGHT_SHIFT
                                              &trans        &trans  &mt LS(LGUI) HOME    &mt RGUI END    &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                               &trans    &trans     &trans       &trans     &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans           &trans  &trans             &trans                &trans                  &trans        &trans  &trans           &trans           &trans  &kp K_POWER
&trans  &trans  &kp PRINTSCREEN  &trans             &trans                &trans                  &trans        &trans  &trans  &kp PRINTSCREEN  &kp PRINTSCREEN  &kp K_SLEEP
&trans  &trans           &trans  &trans  &kp K_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC    &kp C_BRIGHTNESS_INC  &kp K_VOL_UP  &trans           &trans           &trans   &kp K_LOCK
                                 &trans             &trans                &trans                  &trans        &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

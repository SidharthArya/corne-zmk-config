/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)
#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT

#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings =
                <&kp>,
                <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <400>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hl: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "tap-preferred";
            bindings =
                <&mo>,
                <&kp>;
        };
        tog_mod: tog_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "TOG_MOD";
            bindings =
                <&kp>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <400>;
        };
        mod_bluetooth: mod_bluetooth {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_BLUETOOTH";
            bindings =
                <&kp>,
                <&bt>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
        };
        grave_tab: grave_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_TAB";
            bindings =
                <&kp GRAVE>,
                <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
    };

    mmv {
        time-to-max-speed-ms = <200>;/* <--- How long time until max speed is reached (default: 500) */
    };

    mt {
        quick-tap-ms = <500>;
        tapping-term-ms = <200>;
    };

    lt {
        quick-tap-ms = <500>;
        tapping-term-ms = <200>;
    };

    combos {
        compatible = "zmk,combos";

        quick_super_tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <38 0>;
        };

        quick_super_escape {
            bindings = <&kp RG(ESCAPE)>;
            key-positions = <39 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&grave_tab        &hl 3 Q          &kp W        &hl 5 E         &hl 5 R       &hl 1 T                   &hl 2 Y                  &kp U            &hl 5 I          &kp O        &kp P             &hl 3 BACKSLASH
&hl 2 PLUS        &hl 4 A          &hm LCTRL S  &hm LEFT_ALT D  &hm LGUI F    &hl 2 G                   &hl 1 H                  &hm RGUI J       &hm RALT K       &hm RCTRL L  &hl 4 SEMICOLON   &hl 1 APOSTROPHE
&hm LSHIFT MINUS  &hm LCTRL COMMA  &kp Z        &kp X           &hl 4 C       &hm LSHIFT V              &hm RSHIFT B             &hl 4 N          &hl 4 M          &kp TILDE    &hm RCTRL PERIOD  &hm RSHIFT SLASH
                                                &hm LALT TAB    &hl 2 DELETE  &hm LEFT_COMMAND SPACE    &hm RIGHT_COMMAND ENTER  &hl 1 BACKSPACE  &hm RALT ESCAPE
            >;
        };

        lower_layer {
            bindings = <
&kp PG_UP                    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp N1  &kp NUMBER_2  &kp N3           &kp F1          &kp F2          &kp F3            &kp F4           &kp F5     &kp F6
&mod_bluetooth LCTRL BT_SEL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp N4  &kp N5        &kp N6           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT_ARROW  &kp PG_DN  &kp PG_UP
&kp PG_DN                    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N7  &kp N8        &kp N9           &kp F7          &kp F8          &kp F9            &kp F10          &kp F11    &kp F12
                                                                          &kp N0  &kp N0        &hm LGUI HOME    &hm RGUI END    &trans          &tog_mod RCTRL 2
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT            &kp HASH           &kp DLLR  &kp PRCNT    &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp PLUS               &kp EQUAL       &kp BSPC
&kp LCTRL  &trans    &trans            &trans             &trans    &trans       &kp DOLLAR       &kp PERCENT   &kp CARET             &kp MINUS              &kp UNDERSCORE  &kp BACKSLASH
&kp LSHFT  &trans    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans    &trans       &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE        &kp SLASH
                                       &tog_mod LCTRL 1   &trans    &trans       &trans           &kp INSERT    &tog_mod RCTRL 2
            >;
        };

        system_layer {
            bindings = <
&kp K_POWER  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4                &trans                &trans        &trans     &trans           &tog 6           &kp K_POWER
&kp K_SLEEP  &bt BT_CLR    &kp PRINTSCREEN  &kp PSCRN     &kp K_VOL_UP       &kp LS(C_BRIGHTNESS_INC)    &kp C_BRIGHTNESS_INC  &kp K_VOL_UP  &kp PSCRN  &kp PRINTSCREEN  &kp PRINTSCREEN  &kp K_SLEEP
&kp K_LOCK   &kp SYSREQ    &kp PRIOR        &kp K_MUTE    &kp K_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC        &kp C_BRIGHTNESS_DEC  &kp K_VOL_DN  &trans     &trans           &trans           &kp K_LOCK
                                            &trans        &trans             &trans                      &trans                &trans        &trans
            >;
        };

        application_layer {
            bindings = <
&none   &none   &none       &trans         &kp K_REDO  &trans         &trans         &trans  &trans  &trans  &trans  &trans
&none   &none   &none       &kp C_AC_SAVE  &kp K_FIND  &trans         &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp K_UNDO  &kp K_CUT      &kp K_COPY  &kp K_PASTE    &trans         &trans  &trans  &trans  &trans  &trans
                            &trans         &trans      &trans         &kp K_EXECUTE  &trans  &trans
            >;
        };

        quick_app_layer {
            bindings = <
&trans  &trans  &trans  &kp C_AL_TEXT_EDITOR  &trans      &trans               &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                &trans      &trans               &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                &kp K_CALC  &trans               &trans        &trans  &trans  &trans  &trans  &trans
                        &trans                &trans      &kp K_APPLICATION    &kp K_CANCEL  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&kp G      &kp Q  &kp W  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &trans  &trans  &trans  &trans  &tog 6  &trans
&kp H      &kp A  &kp S  &kp D         &kp NUMBER_4  &kp NUMBER_5    &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp L  &kp Z  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8    &trans  &trans  &trans  &trans  &trans  &trans
                         &kp X         &kp C         &kp SPACE       &trans  &trans  &trans
            >;
        };
    };
};
